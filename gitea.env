########################################
#               DEFAULT                #
########################################

# Application name, used in the page title.
# GITEA__DEFAULT__APP_NAME: "Gitea: Git with a cup of tea"

# The user Gitea will run as.
# This should be a dedicated system (non-user) account. Setting this incorrectly will cause Gitea
# to not start.
# GITEA__DEFAULT__RUN_USER: git

# Application run mode, affects performance and debugging:devorprod, default isprod. Modedevmakes Gitea easier to develop and debug, values other thandevare treated asprodwhich is for production use.
# GITEA__DEFAULT__RUN_MODE: prod

# The working directory, see the comment of AppWorkPath above.
# GITEA__DEFAULT__WORK_PATH: the-work-path

########################################
#              repository              #
########################################

# Root path for storing all repository data.
# A relative path is interpreted as{AppWorkPath}/{ROOT}.
# GITEA__repository__ROOT: {APP_DATA_PATH}/gitea-repositories

# The script type this server supports. Usually this isbash,
# but some users report that onlyshis available.
# GITEA__repository__SCRIPT_TYPE: bash

# Tie-break order of detected charsets - if the detected charsets have equal confidence, charsets earlier in the list will be chosen in preference to those later. Addingdefaultswill place the unnamed charsets at that point.
# GITEA__repository__DETECTED_CHARSETS_ORDER: UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, UTF-32LE, ISO-8859, windows-1252, ISO-8859, windows-1250, ISO-8859, ISO-8859, ISO-8859, windows-1253, ISO-8859, windows-1255, ISO-8859, windows-1251, windows-1256, KOI8-R, ISO-8859, windows-1254, Shift_JIS, GB18030, EUC-JP, EUC-KR, Big5, ISO-2022, ISO-2022, ISO-2022, IBM424_rtl, IBM424_ltr, IBM420_rtl, IBM420_ltr

# Default ANSI charset to override non-UTF-8 charsets to.
# GITEA__repository__ANSI_CHARSET:

# Force every new repository to be private.
# GITEA__repository__FORCE_PRIVATE: false

# Default private when creating a new repository:last,private,public
# GITEA__repository__DEFAULT_PRIVATE: last

# Default private when creating a new repository with push-to-create.
# GITEA__repository__DEFAULT_PUSH_CREATE_PRIVATE: true

# Global maximum creation limit of repositories per user,-1 means no limit.
# GITEA__repository__MAX_CREATION_LIMIT: -1

# Preferred Licenses to place at
# the top of the list. Name must match file name in options/license or custom/options/license.
# GITEA__repository__PREFERRED_LICENSES: Apache License 2.0,MIT License

# Disable the ability to interact with repositories over the
# HTTP protocol.
# GITEA__repository__DISABLE_HTTP_GIT: false

# Force ssh:// clone url instead of scp-style uri when
# default SSH port is used.
# GITEA__repository__USE_COMPAT_SSH_URI: false

# Value for the "go get" request returns the repository url as https or ssh
# default is https.
# GITEA__repository__GO_GET_CLONE_URL_PROTOCOL: https

# Value for Access-Control-Allow-Origin header,
# default is not to present.warningThis maybe harmful to you website if you do not give it a right value.
# GITEA__repository__ACCESS_CONTROL_ALLOW_ORIGIN:

# Close an issue if a commit on a non default branch marks it as closed.
# GITEA__repository__DEFAULT_CLOSE_ISSUES_VIA_COMMITS_IN_ANY_BRANCH: false

# Allow users to push local repositories to Gitea and have them automatically created for a user.
# GITEA__repository__ENABLE_PUSH_CREATE_USER: false

# Allow users to push local repositories to Gitea and have them automatically created for an org.
# GITEA__repository__ENABLE_PUSH_CREATE_ORG: false

# Comma separated list of globally disabled repo units. Allowed values: [repo.issues, repo.ext_issues, repo.pulls, repo.wiki, repo.ext_wiki, repo.projects, repo.packages, repo.actions]
# GITEA__repository__DISABLED_REPO_UNITS:

# Comma separated list of default new repo units. Allowed values: [repo.code, repo.releases, repo.issues, repo.pulls, repo.wiki, repo.projects, repo.packages, repo.actions]. Note: Code and Releases can currently not be deactivated. If you specify default repo units you should still list them for future compatibility. External wiki and issue tracker can't be enabled by default as it requires additional settings. Disabled repo units will not be added to new repositories regardless if it is in the default list.
# GITEA__repository__DEFAULT_REPO_UNITS: repo.code,repo.releases,repo.issues,repo.pulls,repo.wiki,repo.projects,repo.packages,repo.actions

# Comma separated list of default forked repo units. The set of allowed values and rules is the same asDEFAULT_REPO_UNITS.
# GITEA__repository__DEFAULT_FORK_REPO_UNITS: repo.code,repo.pulls

# Comma separated list of default mirror repo units. The set of allowed values and rules is the same asDEFAULT_REPO_UNITS.
# GITEA__repository__DEFAULT_MIRROR_REPO_UNITS: repo.code,repo.releases,repo.issues,repo.wiki,repo.projects,repo.packages

# Comma separated list of default template repo units. The set of allowed values and rules is the same asDEFAULT_REPO_UNITS.
# GITEA__repository__DEFAULT_TEMPLATE_REPO_UNITS: repo.code,repo.releases,repo.issues,repo.pulls,repo.wiki,repo.projects,repo.packages

# Prefix archive files by placing them in a directory named after the repository.
# GITEA__repository__PREFIX_ARCHIVE_FILES: true

# Disable migrating feature.
# GITEA__repository__DISABLE_MIGRATIONS: false

# Disable stars feature.
# GITEA__repository__DISABLE_STARS: false

# Default branch name of all repositories.
# GITEA__repository__DEFAULT_BRANCH: main

# Allow non-admin users to adopt unadopted repositories
# GITEA__repository__ALLOW_ADOPTION_OF_UNADOPTED_REPOSITORIES: false

# Allow non-admin users to delete unadopted repositories
# GITEA__repository__ALLOW_DELETION_OF_UNADOPTED_REPOSITORIES: false

# Don't allow download source archive files from UI
# GITEA__repository__DISABLE_DOWNLOAD_SOURCE_ARCHIVES: false

# Allow to fork repositories without maximum number limit
# GITEA__repository__ALLOW_FORK_WITHOUT_MAXIMUM_LIMIT: true

# Allow to fork repositories into the same owner (user or organization). This feature is experimental, not fully tested, and may be changed in the future
# GITEA__repository__ALLOW_FORK_INTO_SAME_OWNER: false

########################################
#           repository.local           #
########################################

# Path for temporary local repository copies. Defaults to tmp/local-repo (content gets deleted on Gitea restart)
# GITEA__repository.local__LOCAL_COPY_PATH: tmp/local-repo

########################################
#     repository.mimetype_mapping      #
########################################

# Configuration for set the expected MIME type based on file extensions of downloadable files. Configuration presents in key-value pairs and file extensions starts with leading `.`.
#
# The following configuration set `Content-Type: application/vnd.android.package-archive` header when downloading files with `.apk` file extension.

# `.apk=application/vnd.android.package-archive`

########################################
#                cors                  #
########################################

# enable cors headers (disabled by default)
# GITEA__cors__ENABLED: false

# list of requesting origins that are allowed, eg: "https://*.example.com"
# GITEA__cors__ALLOW_DOMAIN: *

# list of methods allowed to request
# GITEA__cors__METHODS: GET,HEAD,POST,PUT,PATCH,DELETE,OPTIONS

# max time to cache response
# GITEA__cors__MAX_AGE: 10m

# allow request with credentials
# GITEA__cors__ALLOW_CREDENTIALS: false

# additional headers that are permitted in requests
# GITEA__cors__HEADERS: Content-Type,User-Agent

# Set theX-Frame-Optionsheader value.
# GITEA__cors__X_FRAME_OPTIONS: SAMEORIGIN

########################################
#                  ui                  #
########################################

# Number of repositories that are shown in one explore page.
# GITEA__ui__EXPLORE_PAGING_NUM: 20

# Number of issues that are shown in one page (for all pages that list issues, milestones, projects).
# GITEA__ui__ISSUE_PAGING_NUM: 20

# Number of members that are shown in organization members.
# GITEA__ui__MEMBERS_PAGING_NUM: 20

# Number of maximum commits shown in one activity feed.
# GITEA__ui__FEED_MAX_COMMIT_NUM: 5

# Number of items that are displayed in home feed.
# GITEA__ui__FEED_PAGING_NUM: 20

# Number of items that are displayed in a single subsitemap.
# GITEA__ui__SITEMAP_PAGING_NUM: 20

# Number of maximum commits shown in the commit graph.
# GITEA__ui__GRAPH_MAX_COMMIT_NUM: 100

# Number of line of codes shown for a code comment.
# GITEA__ui__CODE_COMMENT_LINES: 4

# Set the default theme for the Gitea installation, custom themes could be provided by {CustomPath}/public/assets/css/theme-*.css.
# GITEA__ui__DEFAULT_THEME: gitea-auto

# Whether the email of the user should be shown in the Explore Users page.
# GITEA__ui__SHOW_USER_EMAIL: true

# All available themes by {CustomPath}/public/assets/css/theme-*.css. Allow users select personalized themes.
# GITEA__ui__THEMES:

# The icons for file list (basic/material).
# GITEA__ui__FILE_ICON_THEME: material

# Max size of files to be displayed (default is 8MiB)
# GITEA__ui__MAX_DISPLAY_FILE_SIZE: 8388608

# Detect ambiguous unicode characters in file contents and show warnings on the UI
# GITEA__ui__AMBIGUOUS_UNICODE_DETECTION: true

# All available reactions users can choose on issues/prs and comments
# Values can be emoji alias (😄) or a unicode emoji.
# For custom reactions, add a tightly cropped square image to public/assets/img/emoji/reaction_name.png
# GITEA__ui__REACTIONS: 

# Change the number of users that are displayed in reactions tooltip (triggered by mouse hover).
# GITEA__ui__REACTION_MAX_USER_NUM: 10

# Additional Emojis not defined in the utf8 standard.
# By default, we support Gitea (:gitea:), to add more copy them to public/assets/img/emoji/emoji_name.png and
# add it to this config.
# GITEA__ui__CUSTOM_EMOJIS: gitea, codeberg, gitlab, git, github, gogs

# Whether the full name of the users should be shown where possible. If the full name isn't set, the username will be used.
# GITEA__ui__DEFAULT_SHOW_FULL_NAME: false

# Whether to search within description at repository search on explore page.
# GITEA__ui__SEARCH_REPO_DESCRIPTION: true

# Whether to only show relevant repos on the explore page when no keyword is specified and default sorting is used.
# A repo is considered irrelevant if it's a fork or if it has no metadata (no description, no icon, no topic).
# GITEA__ui__ONLY_SHOW_RELEVANT_REPOS: false

# Change the sort type of the explore pages. Valid values are "recentupdate", "alphabetically", "reverselastlogin", "newest" and "oldest"
# GITEA__ui__EXPLORE_PAGING_DEFAULT_SORT: recentupdate

# The tense all timestamps should be rendered in. Possible values areabsolutetime (i.e. 1970-01-01, 11:59) andmixed.mixedmeans most timestamps are rendered in relative time (i.e. 2 days ago).
# GITEA__ui__PREFERRED_TIMESTAMP_TENSE: mixed

########################################
#               ui.admin               #
########################################

# Number of users that are shown in one page.
# GITEA__ui.admin__USER_PAGING_NUM: 50

# Number of repos that are shown in one page.
# GITEA__ui.admin__REPO_PAGING_NUM: 50

# Number of notices that are shown in one page.
# GITEA__ui.admin__NOTICE_PAGING_NUM: 25

# Number of organizations that are shown in one page.
# GITEA__ui.admin__ORG_PAGING_NUM: 50

########################################
#               ui.user                #
########################################

# Number of repos that are shown in one page.
# GITEA__ui.user__REPO_PAGING_NUM: 15

# Number of organizations that are shown in one page.
# GITEA__ui.user__ORG_PAGING_NUM: 15

########################################
#               ui.meta                #
########################################

# Author meta tag of the homepage.
# GITEA__ui.meta__AUTHOR: "Gitea: Git with a cup of tea"

# Description meta tag of the homepage.
# GITEA__ui.meta__DESCRIPTION: "Gitea (Git with a cup of tea) is a painless self-hosted Git service written in Go"

# Keywords meta tag of the homepage.
# GITEA__ui.meta__KEYWORDS: go,git,self-hosted,gitea

########################################
#            ui.notification           #
########################################

# These options control how often notification endpoint is polled to update the notification count. 
# On page load the notification count will be checked after MIN_TIMEOUT. 
# The timeout will increase to MAX_TIMEOUT by TIMEOUT_STEP if the notification count is unchanged. Set MIN_TIMEOUT to -1 to turn off.
# GITEA__ui.notification__MIN_TIMEOUT: 10s

# GITEA__ui.notification__MAX_TIMEOUT: 60s

# GITEA__ui.notification__TIMEOUT_STEP: 10s

# This setting determines how often the database is queried to update notification counts.
# If the browser client supports EventSource and SharedWorker, a SharedWorker will be used in preference to polling notification endpoint.
# Set to -1 to disable the EventSource.
# GITEA__ui.notification__EVENT_SOURCE_UPDATE_TIME: 10s

########################################
#                ui.svg                #
########################################

# Whether to render SVG files as images. If SVG rendering is disabled,
# SVG files are displayed as text and cannot be embedded in markdown files as images.
# GITEA__ui.svg__ENABLE_RENDER: true

########################################
#                ui.csv                #
########################################

# Maximum allowed file size in bytes to render CSV files as table. (Set to 0 for no limit).
# 524288 = 512kb
# GITEA__ui.csv__MAX_FILE_SIZE: 524288

# Maximum allowed rows to render CSV files. (Set to 0 for no limit)
# GITEA__ui.csv__MAX_ROWS: 2500

########################################
#               markdown               #
########################################

# Customize render options for different contexts.
# Set to "none" to disable the defaults, or use comma separated list:
# - short-issue-pattern: recognized "#123" issue reference and render it as a link to the issue
# - new-line-hard-break: 
#         render soft line breaks as hard line breaks, which means a single newline character between 
#         paragraphs will cause a line break and adding trailing whitespace to paragraphs is not necessary to force a line break.
# GITEA__markdown__RENDER_OPTIONS_COMMENT: short-issue-pattern, new-line-hard-break

# see above
# GITEA__markdown__RENDER_OPTIONS_WIKI: short-issue-pattern

# see above
# GITEA__markdown__RENDER_OPTIONS_REPO_FILE: 

# Use a comma separated list (ftp,git,svn) to indicate additional
# URL hyperlinks to be rendered in Markdown. URLs beginning in http and https are
# always displayed. If this entry is empty, all URL schemes are allowed
# GITEA__markdown__CUSTOM_URL_SCHEMES: 

# List of file extensions that should be rendered/edited as Markdown.
# Separate the extensions with a comma. To render files without any extension as markdown, just put a comma.
# GITEA__markdown__FILE_EXTENSIONS: ".md,.markdown,.mdown,.mkd,.livemd"

# Enables detection of $...$, $$...$$, $`...`$$ blocks as math blocks.
# GITEA__markdown__ENABLE_MATH: true

# Enable delimiters for math code block detection.
# Set to "none" to disable all, or use comma separated list: inline-dollar, inline-parentheses, block-dollar, block-square-brackets.
# Default value follows GitHub.
# GITEA__markdown__MATH_CODE_BLOCK_DETECTION: inline-dollar,block-dollar

########################################
#                server                #
########################################

# This is the default root path for storing data.
# GITEA__server__APP_DATA_PATH: AppWorkPath/data

# [http, https, fcgi, http+unix, fcgi+unix]
# Note: Value must be lowercase.
# GITEA__server__PROTOCOL: http

# Expect PROXY protocol headers on connections
# GITEA__server__USE_PROXY_PROTOCOL: false

# When protocol is https, expect PROXY protocol headers after TLS negotiation.
# GITEA__server__PROXY_PROTOCOL_TLS_BRIDGING: false

# Timeout to wait for PROXY protocol header (set to 0 to have no timeout)
# GITEA__server__PROXY_PROTOCOL_HEADER_TIMEOUT: 5s

# Accept PROXY protocol headers with Unknown type.
# GITEA__server__PROXY_PROTOCOL_ACCEPT_UNKNOWN: false

# Domain name of this server.
# GITEA__server__DOMAIN: localhost

# 
# Overwrite the automatically generated public URL.
# This is useful if the internal and the external URL don't match (e.g. behind a reverse proxy).
# GITEA__server__ROOT_URL: {PROTOCOL}://{DOMAIN}:{HTTP_PORT}/

# Controls how to generate the public URL.
# Although it defaults to "legacy" (to avoid breaking existing users), most instances should use the "auto" behavior,
# especially when the Gitea instance needs to be accessed in a container network.
# - "legacy": generate the public URL by "Host" header if "X-Forwarded-Proto" header exists, otherwise use "ROOT_URL".
# - "auto": always use "Host" header, and also use "X-Forwarded-Proto" header if it exists. If no "Host" header, use "ROOT_URL".
# GITEA__server__PUBLIC_URL_DETECTION: legacy
 
# Overwrite this option to request static resources from a different URL.
# This includes CSS files, images, JS files and web fonts.
# Avatar images are dynamic resources and still served by Gitea.
# The option can be just a different path, as in/static, or another domain, as in https://cdn.example.com.
# Requests are then made as {ROOT_URL}/static/assets/css/index.css or https://cdn.example.com/assets/css/index.css respectively.
# The static files are located in the public/ directory of the Gitea source repository.
# You can proxy the STATIC_URL_PREFIX requests to Gitea server to serve the static
# assets, or copy the manually built Gitea assets from $GITEA_BUILD/public to
# the assets location, eg: /var/www/assets, make sure $STATIC_URL_PREFIX/assets/css/index.css points to /var/www/assets/css/index.css.
# note: You must disable ui.notification.EVENT_SOURCE_UPDATE_TIME by setting it to -1.
# If you do not, some UI elements will not work. You will get the following error in the
# browser console Uncaught SecurityError: Failed to construct 'SharedWorker'.
# GITEA__server__STATIC_URL_PREFIX:

# HTTP listen address. 
# - If PROTOCOL is set to `fcgi`, Gitea will listen for FastCGI requests on TCP socket defined by HTTP_ADDR and HTTP_PORT configuration settings.
# - If PROTOCOL is set to http+unix or fcgi+unix, this should be the name of the Unix socket file to use. Relative paths will be made absolute against the AppWorkPath.
# GITEA__server__HTTP_ADDR: 0.0.0.0

# HTTP listen port.
# - If PROTOCOL is set to `fcgi`, Gitea will listen for FastCGI requests on TCP socket defined by HTTP_ADDR and HTTP_PORT configuration settings.
# GITEA__server__HTTP_PORT: 3000

# Permissions for the Unix socket.
# GITEA__server__UNIX_SOCKET_PERMISSION: 666

# Local (DMZ) URL for Gitea workers (such as SSH update) accessing web service. In
# most cases you do not need to change the default value. Alter it only if
# your SSH server node is not the same as HTTP node. For different protocol, the default
# values are different. If PROTOCOL is http+unix, the default value is http://unix/.
# If PROTOCOL is fcgi or fcgi+unix, the default value is {PROTOCOL}://{HTTP_ADDR}:{HTTP_PORT}/.
# If listen on 0.0.0.0, the default value is {PROTOCOL}://localhost:{HTTP_PORT}/, 
# Otherwise the default value is {PROTOCOL}://{HTTP_ADDR}:{HTTP_PORT}/.
# GITEA__server__LOCAL_ROOT_URL: {PROTOCOL}://{HTTP_ADDR}:{HTTP_PORT}/

# When making local connections pass the PROXY protocol header.
# This should be set to false if the local connection will go through the proxy.
# GITEA__server__LOCAL_USE_PROXY_PROTOCOL: {USE_PROXY_PROTOCOL}

# Timeout for any write to the connection. 
# (Set to -1 to disable all timeouts.)
# GITEA__server__PER_WRITE_TIMEOUT: 30s

# Timeout per Kb written to connections.
# GITEA__server__PER_WRITE_PER_KB_TIMEOUT: 10s

# Disable SSH feature when it's not available.
# GITEA__server__DISABLE_SSH: false

# When enabled, use the built-in SSH server.
# GITEA__server__START_SSH_SERVER: false

# Expect PROXY protocol header on connections to the built-in SSH Server.
# GITEA__server__SSH_SERVER_USE_PROXY_PROTOCOL: false

# Username to use for the built-in SSH Server.
# GITEA__server__BUILTIN_SSH_SERVER_USER: {RUN_USER}

# SSH username displayed in clone URLs.
# If it is set to (DOER_USERNAME), it will use current signed-in user's username.
# This option is only for some advanced users who have configured their SSH reverse-proxy and need to use different usernames for git SSH clone.
# Most users should just leave it blank and/or modify the BUILTIN_SSH_SERVER_USER.
# GITEA__server__SSH_USER: {BUILTIN_SSH_SERVER_USER}

# Domain name of this server, used for displayed clone URL.
# GITEA__server__SSH_DOMAIN: {DOMAIN}

# SSH port displayed in clone URL.
# GITEA__server__SSH_PORT: 22

# Listen address for the built-in SSH server.
# GITEA__server__SSH_LISTEN_HOST: 0.0.0.0

# Port for the built-in SSH server.
# GITEA__server__SSH_LISTEN_PORT: {SSH_PORT}

# Root path of SSH directory.
# GITEA__server__SSH_ROOT_PATH: ~/.ssh

# Gitea will create a authorized_keys file by default when it is not using the internal ssh server. If you intend to use the AuthorizedKeysCommand functionality then you should turn this off.
# GITEA__server__SSH_CREATE_AUTHORIZED_KEYS_FILE: true

# Enable SSH Authorized Key Backup when rewriting all keys, default is false.
# GITEA__server__SSH_AUTHORIZED_KEYS_BACKUP: false

# Specifies the public keys of certificate authorities that are trusted to sign user certificates for authentication. Multiple keys should be comma separated. E.g.ssh-<algorithm> <key>orssh-<algorithm> <key1>, ssh-<algorithm> <key2>. For more information seeTrustedUserCAKeysin the sshd config man pages. When empty no file will be created andSSH_AUTHORIZED_PRINCIPALS_ALLOWwill default tooff.
# GITEA__server__SSH_TRUSTED_USER_CA_KEYS:

# Absolute path of theTrustedUserCaKeysfile Gitea will manage. If you're running your own ssh server and you want to use the Gitea managed file you'll also need to modify your sshd_config to point to this file. The official docker image will automatically work without further configuration.
# GITEA__server__SSH_TRUSTED_USER_CA_KEYS_FILENAME: RUN_USER/.ssh/gitea-trusted-user-ca-keys.pem

# orusername, email: [off, username, email, anything]: Specify the principals values that users are allowed to use as principal. When set toanythingno checks are done on the principal string. When set tooffauthorized principal are not allowed to be set.
# GITEA__server__SSH_AUTHORIZED_PRINCIPALS_ALLOW: off

# Gitea will create a authorized_principals file by default when it is not using the internal ssh server andSSH_AUTHORIZED_PRINCIPALS_ALLOWis notoff.
# GITEA__server__SSH_CREATE_AUTHORIZED_PRINCIPALS_FILE: false/true

# Enable SSH Authorized Principals Backup when rewriting all keys, default is true ifSSH_AUTHORIZED_PRINCIPALS_ALLOWis notoff.
# GITEA__server__SSH_AUTHORIZED_PRINCIPALS_BACKUP: false/true

# Set the template for the command to passed on authorized keys. Possible keys are: AppPath, AppWorkPath, CustomConf, CustomPath, Key - where Key is a models/asymkey.PublicKey and the others are strings which are shellquoted.
# GITEA__server__SSH_AUTHORIZED_KEYS_COMMAND_TEMPLATE: "{{.AppPath}} --config={{.CustomConf}} serv key-{{.Key.ID}}"

# For the built-in SSH server, choose the ciphers to support for SSH connections, for system SSH this setting has no effect.
# GITEA__server__SSH_SERVER_CIPHERS: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com

# For the built-in SSH server, choose the key exchange algorithms to support for SSH connections, for system SSH this setting has no effect.
# GITEA__server__SSH_SERVER_KEY_EXCHANGES: curve25519-sha256, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group14-sha256, diffie-hellman-group14-sha1

# For the built-in SSH server, choose the MACs to support for SSH connections, for system SSH this setting has no effect
# GITEA__server__SSH_SERVER_MACS: hmac-sha2-256-etm@openssh.com,hmac-sha2-256,hmac-sha1

# For the built-in SSH server, choose the keypairs to offer as the host key. 
# The private key should be at SSH_SERVER_HOST_KEY and the public SSH_SERVER_HOST_KEY.pub. 
# Relative paths are made absolute relative to the APP_DATA_PATH. If no key exists a 4096 bit RSA key will be created for you.
# GITEA__server__SSH_SERVER_HOST_KEYS: ssh/gitea.rsa,ssh/gogs.rsa

# Directory to create temporary files in when testing public keys using ssh-keygen, default is the system temporary directory.
# GITEA__server__SSH_KEY_TEST_PATH: /tmp

# Usessh-keygento parse public SSH keys. The value is passed to the shell. By default, Gitea does the parsing itself.
# GITEA__server__SSH_KEYGEN_PATH:

# Enable exposure of SSH clone URL to anonymous visitors, default is false.
# GITEA__server__SSH_EXPOSE_ANONYMOUS: false

# Timeout for any write to the SSH connections. (Set to
# -1 to disable all timeouts.)
# GITEA__server__SSH_PER_WRITE_TIMEOUT: 30s

# Timeout per Kb written to SSH connections.
# GITEA__server__SSH_PER_WRITE_PER_KB_TIMEOUT: 10s

# Indicate whether to check minimum key size with corresponding type.
# GITEA__server__MINIMUM_KEY_SIZE_CHECK: true

# Disables use of CDN for static files and Gravatar for profile pictures.
# GITEA__server__OFFLINE_MODE: true

# Cert file path used for HTTPS. When chaining, the server certificate must come first, then intermediate CA certificates (if any). This is ignored ifENABLE_ACME=true. Paths are relative toCUSTOM_PATH.
# GITEA__server__CERT_FILE: https/cert.pem

# Key file path used for HTTPS. This is ignored ifENABLE_ACME=true. Paths are relative toCUSTOM_PATH.
# GITEA__server__KEY_FILE: https/key.pem

# Upper level of template and static files path.
# GITEA__server__STATIC_ROOT_PATH: StaticRootPath

# (/data/giteaon docker): Default path for application data. Relative paths will be made absolute againstAppWorkPath.
# GITEA__server__APP_DATA_PATH: data

# Web browser cache time for static resources oncustom/,public/and all uploaded avatars. Note that this cache is disabled whenRUN_MODEis "dev".
# GITEA__server__STATIC_CACHE_TIME: 6h

# Enable gzip compression for runtime-generated content, static resources excluded.
# GITEA__server__ENABLE_GZIP: false

# Application profiling (memory and cpu). For "web" command it listens onlocalhost:6060. For "serv" command it dumps to disk atPPROF_DATA_PATHas(cpuprofile|memprofile)_<username>_<temporary id>
# GITEA__server__ENABLE_PPROF: false

# PPROF_DATA_PATH, use an absolute path when you start Gitea as service
# GITEA__server__PPROF_DATA_PATH: AppWorkPath/data/tmp/pprof

# Landing page for unauthenticated users [home, explore, organizations, login,custom]. Where custom would instead be any URL such as "/org/repo" or evenhttps://anotherwebsite.com
# GITEA__server__LANDING_PAGE: home

# Enables Git LFS support.
# GITEA__server__LFS_START_SERVER: false

# Enables Git LFS Pure SSH protocol support. Currently disabled by default, seeGit LFS Support.
# GITEA__server__LFS_ALLOW_PURE_SSH: false

# LFS authentication secret, change this a unique string. You can generate one via Gitea sub command. RefCommand Line
# GITEA__server__LFS_JWT_SECRET: 

# Instead of defining LFS_JWT_SECRET in the configuration, this configuration option can be used to give Gitea a path to a file that contains the secret (example value:file:/etc/gitea/lfs_jwt_secret)
# GITEA__server__LFS_JWT_SECRET_URI: 

# LFS authentication validity period in time.Duration, pushes taking longer than this may fail.
# GITEA__server__LFS_HTTP_AUTH_EXPIRY: 24h

# Maximum allowed LFS file size in bytes (Set to 0 for no limit).
# GITEA__server__LFS_MAX_FILE_SIZE: 0

# Maximum number of LFS Locks returned per page.
# GITEA__server__LFS_LOCKS_PAGING_NUM: 50

# The maximum number of LFS pointers that a client may request of the LFS batch api. Zero is the default behavior and allows any size batch.
# GITEA__server__LFS_MAX_BATCH_SIZE: 0

# If true andPROTOCOLis https, allows redirecting http requests onPORT_TO_REDIRECTto the https port Gitea listens on.
# GITEA__server__REDIRECT_OTHER_PORT: false

# expect PROXY protocol header on connections to https redirector.
# GITEA__server__REDIRECTOR_USE_PROXY_PROTOCOL: "{USE_PROXY_PROTOCOL}"

# Port for the http redirection service to listen on. Used whenREDIRECT_OTHER_PORTis true.
# GITEA__server__PORT_TO_REDIRECT: 80

# Set the minimum version of ssl support.
# GITEA__server__SSL_MIN_VERSION: TLSv1.2

# Set the maximum version of ssl support.
# GITEA__server__SSL_MAX_VERSION:

# Set the preferred curves,
# GITEA__server__SSL_CURVE_PREFERENCES: "X25519,P256"

# Set the preferred cipher suites.
# If there is no hardware support for AES suites, by default the ChaCha suites will be preferred over the AES suites.
# supported suites as of Go 1.18 are:
# - TLS 1.0 - 1.2 cipher suites
#   - "rsa_with_rc4_128_sha"
#   - "rsa_with_3des_ede_cbc_sha"
#   - "rsa_with_aes_128_cbc_sha"
#   - "rsa_with_aes_256_cbc_sha"
#   - "rsa_with_aes_128_cbc_sha256"
#   - "rsa_with_aes_128_gcm_sha256"
#   - "rsa_with_aes_256_gcm_sha384"
#   - "ecdhe_ecdsa_with_rc4_128_sha"
#   - "ecdhe_ecdsa_with_aes_128_cbc_sha"
#   - "ecdhe_ecdsa_with_aes_256_cbc_sha"
#   - "ecdhe_rsa_with_rc4_128_sha"
#   - "ecdhe_rsa_with_3des_ede_cbc_sha"
#   - "ecdhe_rsa_with_aes_128_cbc_sha"
#   - "ecdhe_rsa_with_aes_256_cbc_sha"
#   - "ecdhe_ecdsa_with_aes_128_cbc_sha256"
#   - "ecdhe_rsa_with_aes_128_cbc_sha256"
#   - "ecdhe_rsa_with_aes_128_gcm_sha256"
#   - "ecdhe_ecdsa_with_aes_128_gcm_sha256"
#   - "ecdhe_rsa_with_aes_256_gcm_sha384"
#   - "ecdhe_ecdsa_with_aes_256_gcm_sha384"
#   - "ecdhe_rsa_with_chacha20_poly1305_sha256"
#   - "ecdhe_ecdsa_with_chacha20_poly1305_sha256"
# - TLS 1.3 cipher suites
#   - "aes_128_gcm_sha256"
#   - "aes_256_gcm_sha384"
#   - "chacha20_poly1305_sha256"
# - Aliased names
#   - "ecdhe_rsa_with_chacha20_poly1305" is an alias for "ecdhe_rsa_with_chacha20_poly1305_sha256"
#   - "ecdhe_ecdsa_with_chacha20_poly1305" is alias for "ecdhe_ecdsa_with_chacha20_poly1305_sha256"
# GITEA__server__SSL_CIPHER_SUITES: ecdhe_ecdsa_with_aes_256_gcm_sha384,ecdhe_rsa_with_aes_256_gcm_sha384,ecdhe_ecdsa_with_aes_128_gcm_sha256,ecdhe_rsa_with_aes_128_gcm_sha256,ecdhe_ecdsa_with_chacha20_poly1305,ecdhe_rsa_with_chacha20_poly1305

# Flag to enable automatic certificate management via an ACME capable Certificate Authority (CA) server (default: Lets Encrypt). If enabled,CERT_FILEandKEY_FILEare ignored, and the CA must resolveDOMAINto this gitea server. Ensure that DNS records are set and either port80or port443are accessible by the CA server (the public internet by default), and redirected to the appropriate portsPORT_TO_REDIRECTorHTTP_PORTrespectively.
# GITEA__server__ENABLE_ACME: false

# The CA's ACME directory URL, e.g. for a self-hostedsmallstep CA server, it can look likehttps://ca.example.com/acme/acme/directory. If left empty, it defaults to using Let's Encerypt's production CA (checkLETSENCRYPT_ACCEPTTOSas well).
# GITEA__server__ACME_URL:

# This is an explicit check that you accept the terms of service of the ACME provider. The default is Lets Encryptterms of service.
# GITEA__server__ACME_ACCEPTTOS: false

# Directory that the certificate manager will use to cache information such as certs and private keys.
# GITEA__server__ACME_DIRECTORY: https

# Email used for the ACME registration. Usually it is to notify about problems with issued certificates.
# GITEA__server__ACME_EMAIL:

# The CA's root certificate. If left empty, it defaults to using the system's trust chain.
# GITEA__server__ACME_CA_ROOT:

# Perform a graceful restart on SIGHUP
# GITEA__server__ALLOW_GRACEFUL_RESTARTS: true

# After a restart the parent process will stop accepting new connections and will allow requests to finish before stopping. Shutdown will be forced if it takes longer than this time.
# GITEA__server__GRACEFUL_HAMMER_TIME: 60s

# Shutsdown the server if startup takes longer than the provided time. On Windows setting this sends a waithint to the SVC host to tell the SVC host startup may take some time. Please note startup is determined by the opening of the listeners - HTTP/HTTPS/SSH. Indexers may take longer to startup and can have their own timeouts.
# GITEA__server__STARTUP_TIMEOUT: 0

########################################
#               database               #
########################################

# The database type in use [mysql, postgres, mssql, sqlite3].
# GITEA__database__DB_TYPE: mysql

# Database host address and port or absolute path for unix socket [mysql, postgres1] (ex: /var/run/mysqld/mysqld.sock).
# GITEA__database__HOST: 127.0.0.1:3306

# Database name.
# GITEA__database__NAME: gitea

# Database username.
# GITEA__database__USER: root

# Database user password. Use `your password` or """your password""" for quoting if you use special characters in the password.
# GITEA__database__PASSWD:

# (MySQL/MSSQL only) Gitea expects to use a case-sensitive collation for database. Leave it empty to use the default collation decided by the Gitea. Don't change it unless you clearly know what you need.
# GITEA__database__CHARSET_COLLATION:

# For PostgreSQL only, schema to use if different from "public". The schema must exist beforehand,
# the user must have creation privileges on it, and the user search path must be set to the look into the schema first
# (e.g.ALTER USER user SET SEARCH_PATH = schema_name,"$user",public;).
# GITEA__database__SCHEMA:

# SSL/TLS encryption mode for connecting to the database. This option is only applied for PostgreSQL and MySQL.
# - Valid values for MySQL:
#   - true: Enable TLS with verification of the database server certificate against its root certificate. 
#           When selecting this option make sure that the root certificate required to validate the database server certificate 
#           (e.g. the CA certificate) is on the system certificate store of both the database and Gitea servers. 
#           See your system documentation for instructions on how to add a CA certificate to the certificate store.
#   - false: Disable TLS.
#   - disable: Alias for false, for compatibility with PostgreSQL.
#   - skip-verify: Enable TLS without database server certificate verification. Use this option if you have self-signed or invalid certificate on the database server.
#   - prefer: Enable TLS with fallback to non-TLS connection.
# - Valid values for PostgreSQL:
#   - disable: Disable TLS.
#   - require: Enable TLS without any verifications.
#   - verify-ca: Enable TLS with verification of the database server certificate against its root certificate.
#   - verify-full: Enable TLS and verify the database server name matches the given certificate in either the Common Name or Subject Alternative Name fields.
# GITEA__database__SSL_MODE: disable

# Query timeout for SQLite3 only.
# GITEA__database__SQLITE_TIMEOUT: 500

# Change journal mode for SQlite3. Can be used to enableWAL modewhen high load causes write congestion. SeeSQlite3 docsfor possible values. Defaults to the default for the database file, often DELETE.
# GITEA__database__SQLITE_JOURNAL_MODE: ""

# Internal buffer size for iterating.
# GITEA__database__ITERATE_BUFFER_SIZE: 50

# For SQLite3 only, the database file path.
# GITEA__database__PATH: data/gitea.db

# Log the executed SQL.
# GITEA__database__LOG_SQL: false

# How many ORM init / DB connect attempts allowed.
# GITEA__database__DB_RETRIES: 10

# time.Duration to wait before trying another ORM init / DB connect attempt, if failure occurred.
# GITEA__database__DB_RETRY_BACKOFF: 3s

# Database maximum open connections - default is 0, meaning there is no limit.
# GITEA__database__MAX_OPEN_CONNS: 0

# Max idle database connections on connection pool, default is 2 - this will be capped toMAX_OPEN_CONNS.
# GITEA__database__MAX_IDLE_CONNS: 2

# Sets the maximum amount of time a DB connection may be reused - default is 0, meaning there is no limit (except on MySQL where it is 3s - see #6804 & #7071).
# GITEA__database__CONN_MAX_LIFETIME: 0 or 3s

# Whether execute database models migrations automatically.
# GITEA__database__AUTO_MIGRATION: true

# Threshold value in seconds beyond which query execution time is logged as a warning in the xorm logger.
# GITEA__database__SLOW_QUERY_THRESHOLD: 5s

########################################
#               indexer                #
########################################

# Issue indexer type, currently supported:bleve,db,elasticsearchormeilisearch.
# GITEA__indexer__ISSUE_INDEXER_TYPE: bleve

# ****: Issue indexer connection string, available when ISSUE_INDEXER_TYPE is elasticsearch (e.g.http://elastic:password@localhost:9200) or meilisearch (e.g.http://:apikey@localhost:7700)
# GITEA__indexer__ISSUE_INDEXER_CONN_STR: 

# Issue indexer name, available when ISSUE_INDEXER_TYPE is elasticsearch or meilisearch.
# GITEA__indexer__ISSUE_INDEXER_NAME: gitea_issues

# Index file used for issue search; available when ISSUE_INDEXER_TYPE is bleve and elasticsearch. Relative paths will be made absolute againstAppWorkPath.
# GITEA__indexer__ISSUE_INDEXER_PATH: indexers/issues.bleve

# Enables code search (uses a lot of disk space, about 6 times more than the repository size).
# GITEA__indexer__REPO_INDEXER_ENABLED: false

# Repo indexer units. The items to index could besources,forks,mirrors,templatesor any combination of them separated by a comma. If empty then it defaults to sources only, as if you'd like to disable fully please see REPO_INDEXER_ENABLED.
# GITEA__indexer__REPO_INDEXER_REPO_TYPES: sources,forks,mirrors,templates

# Code search engine type, could be bleve or elasticsearch.
# GITEA__indexer__REPO_INDEXER_TYPE: bleve

# Index file used for code search.
# GITEA__indexer__REPO_INDEXER_PATH: indexers/repos.bleve

# ****: Code indexer connection string, available when REPO_INDEXER_TYPE is elasticsearch. i.e. http://elastic:password@localhost:9200
# GITEA__indexer__REPO_INDEXER_CONN_STR: 

# Code indexer name, available when REPO_INDEXER_TYPE is elasticsearch
# GITEA__indexer__REPO_INDEXER_NAME: gitea_codes

# A comma separated list of glob patterns (see https://github.com/gobwas/glob) to include in the index. Use **.txt to match any files with .txt extension. An empty list means include all files.
# GITEA__indexer__REPO_INDEXER_INCLUDE:

# A comma separated list of glob patterns (see https://github.com/gobwas/glob) to exclude from the index. Files that match this list will not be indexed, even if they match in REPO_INDEXER_INCLUDE.
# GITEA__indexer__REPO_INDEXER_EXCLUDE:

# Exclude vendored files from index.
# GITEA__indexer__REPO_INDEXER_EXCLUDE_VENDORED: true

# Maximum size in bytes of files to be indexed.
# GITEA__indexer__MAX_FILE_SIZE: 1048576

# If the indexer takes longer than this timeout to start - fail. (This timeout will be added to the hammer time above for child processes - as bleve will not start until the previous parent is shutdown.) Set to -1 to never timeout.
# GITEA__indexer__STARTUP_TIMEOUT: 30s

########################################
#               queue                  #
########################################

# Configuration at [queue] will set defaults for queues with overrides for individual queues at [queue.*]. (However see below.)
# Gitea creates the following non-unique queues:
# - code_indexer
# - issue_indexer
# - notification-service
# - task
# - mail
# - push_update
# And the following unique queues:
# - repo_stats_update
# - repo-archive
# - mirror
# - pr_patch_checker

# General queue type, currently support: level (uses a LevelDB internally), channel, redis, dummy. Invalid types are treated as level.
# GITEA__queue__TYPE: level

# Base DataDir for storing level queues. DATADIR for individual queues can be set in queue.name sections. Relative paths will be made absolute against {APP_DATA_PATH}.
# GITEA__queue__DATADIR: queues/common

# Maximal queue size before channel queues block
# GITEA__queue__LENGTH: 100000

# Batch data before passing to the handler
# GITEA__queue__BATCH_LENGTH: 20

# Connection string for the redis queue type. Several redis connections schemes are supported. To see all available uri.Scheme types, see https://github.com/go-gitea/gitea/blob/release/v1.24/modules/nosql/manager_redis.go#L98-L123. 
# For example, if you're running a Redis cluster, use redis+cluster://127.0.0.1:6379/0. Options can be set using query params. 
# Similarly, LevelDB options can also be set using: leveldb://relative/path?option=value or leveldb:///absolute/path?option=value, and will override DATADIR
# GITEA__queue__CONN_STR: redis://127.0.0.1:6379/0

# The suffix for default redis and disk queue name. Individual queues will default to name QUEUE_NAME but can be overridden in the specific queue.name section.
# GITEA__queue__QUEUE_NAME: _queue

# The suffix that will be added to the default redis and disk queue set name for unique queues. Individual queues will default to name QUEUE_NAME SET_NAME but can be overridden in the specific queue.name section.
# GITEA__queue__SET_NAME: _unique

# Maximum number of worker go-routines for the queue. Default value is "CpuNum/2" clipped to between 1 and 10.
# GITEA__queue__MAX_WORKERS:

########################################
#                admin                 #
########################################

# Default configuration for email notifications for users (user configurable). Options: enabled, onmention, disabled
# GITEA__admin__DEFAULT_EMAIL_NOTIFICATIONS: enabled

# Disallow regular (non-admin) users from creating organizations.
# GITEA__admin__DISABLE_REGULAR_ORG_CREATION: false

# Disabled features for users, could be deletion, manage_ssh_keys, manage_gpg_keys and more features can be added in future.
# - deletion: User cannot delete their own account.
# - manage_ssh_keys: User cannot configure ssh keys.
# - manage_gpg_keys: User cannot configure gpg keys.
# - manage_mfa: a User cannot configure mfa devices.
# - manage_credentials: a user cannot configure emails, passwords, or openid
# - change_username: a user cannot change their username
# - change_full_name: a user cannot change their full name
# GITEA__admin__USER_DISABLED_FEATURES:

# Comma separated list of disabled features ONLY if the user has an external login type (eg. LDAP, Oauth, etc.), could be deletion, manage_ssh_keys, manage_gpg_keys, manage_mfa, manage_credentials. 
# This setting is independent from USER_DISABLED_FEATURES and supplements its behavior.
# - deletion: User cannot delete their own account.
# - manage_ssh_keys: User cannot configure ssh keys.
# - manage_gpg_keys: User cannot configure gpg keys.
# - manage_mfa: a User cannot configure mfa devices.
# - manage_credentials: a user cannot configure emails, passwords, or openid
# - change_username: a user cannot change their username
# - change_full_name: a user cannot change their full name
# GITEA__admin__EXTERNAL_USER_DISABLE_FEATURES:

########################################
#               security               #
########################################

# Controls access to the installation page. When set to "true", the installation page is not accessible.
# GITEA__security__INSTALL_LOCK: false

# Global secret key. This key is VERY IMPORTANT, if you lost it, the data encrypted by it (like 2FA secret) can't be decrypted anymore.
# GITEA__security__SECRET_KEY: "<random at every install>"

# Instead of defining SECRET_KEY, this option can be used to use the key stored in a file (example value: file:/etc/gitea/secret_key). It shouldn't be lost like SECRET_KEY.
# GITEA__security__SECRET_KEY_URI:

# How long to remember that a user is logged in before requiring relogin (in days).
# GITEA__security__LOGIN_REMEMBER_DAYS: 31

# Name of cookie used to store authentication
# information.
# GITEA__security__COOKIE_REMEMBER_NAME: gitea_incredible

# Header name for reverse proxy
# authentication.
# GITEA__security__REVERSE_PROXY_AUTHENTICATION_USER: "X-WEBAUTH-USER"

# Header name for reverse proxy
# authentication provided email.
# GITEA__security__REVERSE_PROXY_AUTHENTICATION_EMAIL: "X-WEBAUTH-EMAIL"

# Header name for reverse proxy
# authentication provided full name.
# GITEA__security__REVERSE_PROXY_AUTHENTICATION_FULL_NAME: "X-WEBAUTH-FULLNAME"

# Interpret X-Forwarded-For header or the X-Real-IP header and set this as the remote IP for the request.
# Number of trusted proxy count. Set to zero to not use these headers.
# GITEA__security__REVERSE_PROXY_LIMIT: 1

# List of IP addresses and networks separated by comma of trusted proxy servers. Use*to trust all.
# GITEA__security__REVERSE_PROXY_TRUSTED_PROXIES: "127.0.0.0/8,::1/128"

# Set to false to enable users with Git Hook privilege to create custom Git Hooks.
# WARNING:
# Custom Git Hooks can be used to perform arbitrary code execution on the host operating system.
# This enables the users to access and modify this config file and the Gitea database and interrupt the Gitea service.
# By modifying the Gitea database, users can gain Gitea administrator privileges.
# It also enables them to access other resources available to the user on the operating system that is running the
# Gitea instance and perform arbitrary actions in the name of the Gitea OS user.
# This maybe harmful to you website or your operating system.
# Setting this to true does not change existing hooks in git repos; adjust it before if necessary.
# GITEA__security__DISABLE_GIT_HOOKS: true

# Set to true to disable webhooks feature.
# GITEA__security__DISABLE_WEBHOOKS: false

# Set to false to allow local users to push to gitea-repositories without setting up the Gitea environment. 
# This is not recommended and if you want local users to push to Gitea repositories you should set the environment appropriately.
# GITEA__security__ONLY_ALLOW_PUSH_IF_GITEA_ENVIRONMENT_SET: true

# Set to false to prevent all users (including admin) from importing local path on server.
# GITEA__security__IMPORT_LOCAL_PATHS: false

# Secret used to validate communication within Gitea binary.
# <random at every install if no uri set>
# GITEA__security__INTERNAL_TOKEN:

# Instead of defining INTERNAL_TOKEN in the configuration, this configuration option can be used to give Gitea a path to a file that contains the internal token (example value:file:/etc/gitea/internal_token)
# GITEA__security__INTERNAL_TOKEN_URI:

# The hash algorithm to use [argon2, pbkdf2, pbkdf2_v1, pbkdf2_hi, scrypt, bcrypt], argon2 and scrypt will spend significant amounts of memory.
# Note: The default parameters for pbkdf2hashing have changed - the previous settings are available aspbkdf2_v1but are not recommended.
# The hash functions may be tuned by using $ after the algorithm:
# - argon2$<time>$<memory>$<threads>$<key-length>
# - bcrypt$<cost>
# - pbkdf2$<iterations>$<key-length>
# - scrypt$<n>$<r>$<p>$<key-length>
# The defaults are: 
# - argon2: argon2$2$65536$8$50
# - bcrypt: bcrypt$10
# - pbkdf2: pbkdf2$50000$50
# - pbkdf2_v1: pbkdf2$10000$50
# - pbkdf2_v2: pbkdf2$50000$50
# - pbkdf2_hi: pbkdf2$320000$50
# - scrypt: scrypt$65536$16$2$50
# Adjusting the algorithm parameters using this functionality is done at your own risk.
# GITEA__security__PASSWORD_HASH_ALGO: pbkdf2

# Set false to allow JavaScript to read CSRF cookie.
# GITEA__security__CSRF_COOKIE_HTTP_ONLY: true

# Minimum password length for new users.
# GITEA__security__MIN_PASSWORD_LENGTH: 8

# Comma separated list of character classes required to pass minimum complexity. 
# If left empty or no valid values are specified, checking is disabled (off):
# - lower - use one or more lower latin characters
# - upper - use one or more upper latin characters
# - digit - use one or more digits
# - spec - use one or more special characters as !"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~
# - off - do not check password complexity
# GITEA__security__PASSWORD_COMPLEXITY: off

# Check HaveIBeenPwned to see if a password has been exposed.
# GITEA__security__PASSWORD_CHECK_PWN: false

# Cache successful token hashes. API tokens are stored in the DB as pbkdf2 hashes however, this means that there is a potentially significant hashing load when there are multiple API operations. This cache will store the successfully hashed tokens in a LRU cache as a balance between performance and security.
# GITEA__security__SUCCESSFUL_TOKENS_CACHE_SIZE: 20

# Reject API tokens sent in URL query string (Accept Header-based API tokens only). This setting will default to true in Gitea 1.23 and be deprecated in Gitea 1.24.
# GITEA__security__DISABLE_QUERY_AUTH_TOKEN: false

########################################
#                 camo                 #
########################################

# Enable media proxy, we support images only at the moment.
# GITEA__camo__ENABLED: false

# URL of camo server, it is required if camo is enabled.
# GITEA__camo__SERVER_URL:

# Provide the HMAC key for encoding URLs, it is required if camo is enabled.
# GITEA__camo__HMAC_KEY:

# Set to true to use camo for both HTTP and HTTPS content, otherwise only non-HTTPS URLs are proxied. 
# ALWAYS is deprecated and will be removed in a future release.
# GITEA__camo__ALWAYS: false

########################################
#                openid                #
########################################

# Allow authentication in via OpenID.
# GITEA__openid__ENABLE_OPENID_SIGNIN: true

# Allow registering via OpenID.
# GITEA__openid__ENABLE_OPENID_SIGNUP: ! DISABLE_REGISTRATION

# If non-empty, list of POSIX regex patterns matching
# OpenID URI's to permit.
# GITEA__openid__WHITELISTED_URIS:

# If non-empty, list of POSIX regex patterns matching
# OpenID URI's to block.
# GITEA__openid__BLACKLISTED_URIS:

########################################
#            oauth2_client             #
########################################

# [service]: Set this to enable or disable email confirmation of OAuth2 auto-registration. (Overwrites the REGISTER_EMAIL_CONFIRM setting of the service section)
# GITEA__oauth2_client__REGISTER_EMAIL_CONFIRM: REGISTER_EMAIL_CONFIRM

# List of additional openid connect scopes. (openid is implicitly added)
# GITEA__oauth2_client__OPENID_CONNECT_SCOPES:

# Automatically create user accounts for new oauth2 users.
# GITEA__oauth2_client__ENABLE_AUTO_REGISTRATION: false

# The source of the username for new oauth2 accounts:
# - userid: use the userid / sub attribute
# - nickname: use the nickname
# - preferred_username: use the preferred_username
# - email: use the username part of the email attribute
# Note: nickname, preferred_username and email options will normalize input strings using the following criteria: 
# - diacritics are removed 
# - the characters in the set ['´`] are removed
# - the characters in the set [\s~+] are replaced with '-'
# GITEA__oauth2_client__USERNAME:

# Update avatar if available from oauth2 provider. Update will be performed on each login.
# GITEA__oauth2_client__UPDATE_AVATAR: false

# How to handle if an account / email already exists:
# - disabled: show an error
# - login: show an account linking login
# - auto: automatically link with the account 
#         (Please be aware that this will grant access to an existing account just because the same username or email is provided. 
#          You must make sure that this does not cause issues with your authentication providers.)
# GITEA__oauth2_client__ACCOUNT_LINKING: login

########################################
#               service                #
########################################

# Time limit (min) to confirm account/email registration.
# GITEA__service__ACTIVE_CODE_LIVE_MINUTES: 180

# Time limit (min) to confirm forgot password reset
# process.
# GITEA__service__RESET_PASSWD_CODE_LIVE_MINUTES: 180

# Enable this to ask for mail confirmation of registration.
# Requires Mailer to be enabled.
# GITEA__service__REGISTER_EMAIL_CONFIRM: false

# Enable this to manually confirm new registrations.
# Requires REGISTER_EMAIL_CONFIRM to be disabled.
# GITEA__service__REGISTER_MANUAL_CONFIRM: false

# Disable registration, after which only admin can create
# accounts for users.
# GITEA__service__DISABLE_REGISTRATION: false

# Enable this to force externally created accounts (via GitHub, OpenID Connect, etc) to create a password.
# WARNING: 
# Enabling this will decrease security, so you should only enable it if you know what you're doing.
# GITEA__service__REQUIRE_EXTERNAL_REGISTRATION_PASSWORD: false

# Enable this to force users to log in to view any page or to use API.
# It could be set to "expensive" to block anonymous users accessing some pages which consume a lot of resources,
# for example: block anonymous AI crawlers from accessing repo code pages.
# The "expensive" mode is experimental and subject to change.
# GITEA__service__REQUIRE_SIGNIN_VIEW: false

# Enable this to send e-mail to watchers of a repository when
# something happens, like creating issues. RequiresMailerto be enabled.
# GITEA__service__ENABLE_NOTIFY_MAIL: false

# Disable this to disallow authentication using HTTP
# BASIC and the user's password. Please note if you disable this you will not be able to access the
# tokens API endpoints using a password. Further, this only disables BASIC authentication using the
# password - not tokens or OAuth Basic.
# GITEA__service__ENABLE_BASIC_AUTHENTICATION: true

# Show the password login form (for password-based login),
# otherwise, only show OAuth2 or passkey login methods if they are enabled.
# If you set it to false, maybe it also needs to setENABLE_BASIC_AUTHENTICATIONto false to
# completely disable password-based authentication.
# GITEA__service__ENABLE_PASSWORD_SIGNIN_FORM: true

# Allow users to sign-in with a passkey
# GITEA__service__ENABLE_PASSKEY_AUTHENTICATION: true

# Enable this to allow reverse proxy authentication for web requests
# GITEA__service__ENABLE_REVERSE_PROXY_AUTHENTICATION: false

# Enable this to allow reverse proxy authentication for API requests, the reverse proxy is responsible for ensuring that no CSRF is possible.
# GITEA__service__ENABLE_REVERSE_PROXY_AUTHENTICATION_API: false

# Enable this to allow auto-registration
# for reverse authentication.
# GITEA__service__ENABLE_REVERSE_PROXY_AUTO_REGISTRATION: false

# Enable this to allow to auto-registration with a
# provided email rather than a generated email.
# GITEA__service__ENABLE_REVERSE_PROXY_EMAIL: false

# Enable this to allow to auto-registration with a
# provided full name for the user.
# GITEA__service__ENABLE_REVERSE_PROXY_FULL_NAME: false

# Enable this to use captcha validation for registration.
# GITEA__service__ENABLE_CAPTCHA: false

# Enable this to require captcha validation for login. You also must enableENABLE_CAPTCHA.
# GITEA__service__REQUIRE_CAPTCHA_FOR_LOGIN: false

# Enable this to force captcha validation
# even for External Accounts (i.e. GitHub, OpenID Connect, etc). You also must enableENABLE_CAPTCHA.
# GITEA__service__REQUIRE_EXTERNAL_REGISTRATION_CAPTCHA: false

# [image, recaptcha, hcaptcha, mcaptcha, cfturnstile]
# GITEA__service__CAPTCHA_TYPE: image

# Go tohttps://www.google.com/recaptcha/adminto get a secret for recaptcha.
# GITEA__service__RECAPTCHA_SECRET: """"

# Go tohttps://www.google.com/recaptcha/adminto get a sitekey for recaptcha.
# GITEA__service__RECAPTCHA_SITEKEY: """"

# Set the recaptcha url - allows the use of recaptcha net.
# GITEA__service__RECAPTCHA_URL: "https://www.google.com/recaptcha/"

# Sign up athttps://www.hcaptcha.com/to get a secret for hcaptcha.
# GITEA__service__HCAPTCHA_SECRET: """"

# Sign up athttps://www.hcaptcha.com/to get a sitekey for hcaptcha.
# GITEA__service__HCAPTCHA_SITEKEY: """"

# Go to your mCaptcha instance to get a secret for mCaptcha.
# GITEA__service__MCAPTCHA_SECRET: """"

# Go to your mCaptcha instance to get a sitekey for mCaptcha.
# GITEA__service__MCAPTCHA_SITEKEY: """"

# Set the mCaptcha URL.
# GITEA__service__MCAPTCHA_URL: "https://demo.mcaptcha.org/"

# Go tohttps://dash.cloudflare.com/?to=/:account/turnstileto get a secret for cloudflare turnstile.
# GITEA__service__CF_TURNSTILE_SECRET: """"

# Go tohttps://dash.cloudflare.com/?to=/:account/turnstileto get a sitekey for cloudflare turnstile.
# GITEA__service__CF_TURNSTILE_SITEKEY: """"

# By default set users to keep their email address private.
# GITEA__service__DEFAULT_KEEP_EMAIL_PRIVATE: false

# Allow new users to create organizations by default.
# GITEA__service__DEFAULT_ALLOW_CREATE_ORGANIZATION: true

# Give new users restricted permissions by default
# GITEA__service__DEFAULT_USER_IS_RESTRICTED: false

# Enable this to have dependencies enabled by default.
# GITEA__service__DEFAULT_ENABLE_DEPENDENCIES: true

# Enable this to allow dependencies on issues from any repository where the user is granted access.
# GITEA__service__ALLOW_CROSS_REPOSITORY_DEPENDENCIES: true

# A map service URL to show user's location on a map. The location will be appended to the URL as escaped query parameter.
# GITEA__service__USER_LOCATION_MAP_URL: ""

# Enable this to display the heatmap on users profiles.
# GITEA__service__ENABLE_USER_HEATMAP: true

# Enable Timetracking feature.
# GITEA__service__ENABLE_TIMETRACKING: true

# Allow repositories to use timetracking by default.
# GITEA__service__DEFAULT_ENABLE_TIMETRACKING: true

# Only allow users with write permissions to track time.
# GITEA__service__DEFAULT_ALLOW_ONLY_CONTRIBUTORS_TO_TRACK_TIME: true

# If non-empty, comma separated list of domain names that can only be used to register on this instance, wildcard is supported.
# GITEA__service__EMAIL_DOMAIN_ALLOWLIST:

# If non-empty, comma separated list of domain names that cannot be used to register on this instance, wildcard is supported.
# GITEA__service__EMAIL_DOMAIN_BLOCKLIST:

# Show Registration Button
# GITEA__service__SHOW_REGISTRATION_BUTTON: ! DISABLE_REGISTRATION

# Enable this to show the milestones dashboard page - a view of all the user's milestones
# GITEA__service__SHOW_MILESTONES_DASHBOARD_PAGE: true

# Enable this to let all organisation users watch new repos when they are created
# GITEA__service__AUTO_WATCH_NEW_REPOS: true

# Enable this to make users watch a repository after their first commit to it
# GITEA__service__AUTO_WATCH_ON_CHANGES: false

# Set default visibility mode for users, either "public", "limited" or "private".
# GITEA__service__DEFAULT_USER_VISIBILITY: public

# Set which visibility modes a user can have
# GITEA__service__ALLOWED_USER_VISIBILITY_MODES: public,limited,private

# Set default visibility mode for organisations, either "public", "limited" or "private".
# GITEA__service__DEFAULT_ORG_VISIBILITY: public

# True will make the membership of the users visible when added to the organisation.
# GITEA__service__DEFAULT_ORG_MEMBER_VISIBLE: false

# Set to true to force registration only via Gitea.
# GITEA__service__ALLOW_ONLY_INTERNAL_REGISTRATION: false

# Set to true to force registration only using third-party services.
# GITEA__service__ALLOW_ONLY_EXTERNAL_REGISTRATION: false

# Value for the domain part of the user's email address in the Git log if user has set KeepEmailPrivate to true. DOMAIN resolves to the value in server.DOMAIN.
# The user's email will be replaced with a concatenation of the user name in lower case, "@" and NO_REPLY_ADDRESS.
# GITEA__service__NO_REPLY_ADDRESS: noreply.DOMAIN

# Minimum amount of time a user must exist before comments are kept when the user is deleted.
# GITEA__service__USER_DELETE_WITH_COMMENTS_MAX_TIME: 0

# Valid site url schemes for user profiles
# GITEA__service__VALID_SITE_URL_SCHEMES: "http, https"

########################################
#           service.explore            #
########################################

# Only allow signed in users to view the explore pages.
# GITEA__service.explore__REQUIRE_SIGNIN_VIEW: false

# Disable the users explore page
# GITEA__service.explore__DISABLE_USERS_PAGE: false

# Disable the organizations explore page
# GITEA__service.explore__DISABLE_ORGANIZATIONS_PAGE: false

# Disable the code explore page
# GITEA__service.explore__DISABLE_CODE_PAGE: false

########################################
#                 qos                  #
########################################

# Enable request quality of service and overload protection.
# GITEA__qos__ENABLED: false

# The maximum number of concurrent requests that the server will process before enqueueing new requests. Default is "CpuNum * 4".
# GITEA__qos__MAX_INFLIGHT:

# The maximum number of requests that can be enqueued before new requests will be dropped.
# GITEA__qos__MAX_WAITING: 100

# Target maximum wait time a request may be enqueued for. Requests that are enqueued for less than this amount of time will not be dropped. 
# When wait times exceed this amount, a portion of requests will be dropped until wait times have decreased below this amount.
# GITEA__qos__TARGET_WAIT_TIME: 250ms

########################################
#        ssh.minimum_key_sizes         #
########################################

# Define allowed algorithms and their minimum key length (use -1 to disable a type):

# GITEA__ssh.minimum_key_sizes__ED25519: 256

# GITEA__ssh.minimum_key_sizes__ECDSA: 256

# We set 3071 here because an otherwise valid 3072 RSA key can be reported as 3071 length.
# GITEA__ssh.minimum_key_sizes__RSA: 3071

# DSA is now disabled by default. Set to1024to re-enable but ensure you may need to reconfigure your SSHD provider
# GITEA__ssh.minimum_key_sizes__DSA: -1

########################################
#               webhook                #
########################################

# Hook task queue length. Use caution when editing this value.
# GITEA__webhook__QUEUE_LENGTH: 1000

# Delivery timeout (sec) for shooting webhooks.
# GITEA__webhook__DELIVER_TIMEOUT: 5

# Webhook can only call allowed hosts for security reasons. Comma separated list.
# Built-in networks:
# - loopback: 127.0.0.0/8 for IPv4 and ::1/128 for IPv6, localhost is included.
# - private: RFC 1918 (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) and RFC 4193 (FC00::/7). Also called LAN/Intranet.
# - external: A valid non-private unicast IP, you can access all hosts on public internet.
# - *: All hosts are allowed.
# CIDR list: 1.2.3.0/8 for IPv4 and 2001:db8::/32 for IPv6
# Wildcard hosts: *.mydomain.com, 192.168.100.*
# GITEA__webhook__ALLOWED_HOST_LIST: external

# Allow insecure certification.
# GITEA__webhook__SKIP_TLS_VERIFY: false

# Number of webhook history events that are shown in one page.
# GITEA__webhook__PAGING_NUM: 10

# Proxy server URL, support http://, https//, socks://, blank will follow environment http_proxy/https_proxy. If not given, will use global proxy setting.
# GITEA__webhook__PROXY_URL:

# Comma separated list of host names requiring proxy. Glob patterns (*) are accepted; use ** to match all hosts. If not given, will use global proxy setting.
# GITEA__webhook__PROXY_HOSTS:

########################################
#                mailer                #
########################################

# Enable to use a mail service.
# GITEA__mailer__ENABLED: false

# Mail server protocol. One of "smtp", "smtps", "smtp+starttls", "smtp+unix", "sendmail", "dummy".
# - smtp* family, if your provider does not explicitly say which protocol it uses but does provide a port, you can set SMTP_PORT instead and this will be inferred.
# - sendmail: Use the operating system's sendmail command instead of SMTP. This is common on Linux systems.
# - dummy: Send email messages to the log as a testing phase.
# Note that enabling sendmail will ignore all other mailer settings except ENABLED, FROM, SUBJECT_PREFIX and SENDMAIL_PATH. Enabling dummy will ignore all settings except ENABLED, SUBJECT_PREFIX and FROM.
# GITEA__mailer__PROTOCOL:

# Mail server address. e.g. smtp.gmail.com. For smtp+unix, this should be a path to a unix socket instead.
# GITEA__mailer__SMTP_ADDR:

# Mail server port. If no protocol is specified, it will be inferred by this setting. Common ports are listed below.
# - 25:  insecure SMTP
# - 465: SMTP Secure
# - 587: StartTLS
# GITEA__mailer__SMTP_PORT:

# Use client certificate for TLS/SSL.
# GITEA__mailer__USE_CLIENT_CERT: false

# Client certificate file.
# GITEA__mailer__CLIENT_CERT_FILE: custom/mailer/cert.pem

# Client key file.
# GITEA__mailer__CLIENT_KEY_FILE: custom/mailer/key.pem

# If set to true , completely ignores server certificate validation errors. This option is unsafe. Consider adding the certificate to the system trust store instead.
# GITEA__mailer__FORCE_TRUST_SERVER_CERT: false

# Username of mailing user (usually the sender's e-mail address).
# GITEA__mailer__USER:

# Password of mailing user.  Use `your password` for quoting if you use special characters in the password. 
# Please note: authentication is only supported when the SMTP server communication is encrypted with TLS (this can be via STARTTLS) or SMTP host is localhost. See Email Setup for more information.
# GITEA__mailer__PASSWD:

# Enable HELO operation.
# GITEA__mailer__ENABLE_HELO: true

# HELO hostname.
# GITEA__mailer__HELO_HOSTNAME: (retrieved from system)

# Mail from address, RFC 5322. This can be just an email address, or the "Name"\<email@example.com\>format.
# GITEA__mailer__FROM:

# Address set as the From address on the SMTP mail envelope. Set to<>to send an empty address.
# GITEA__mailer__ENVELOPE_FROM:

# If gitea sends mails on behave of users, it will just use the name also displayed in the WebUI. If you want e.g. Mister X (by CodeIt) <gitea@codeit.net>, set it to {{ .DisplayName }} (by {{ .AppName }}). 
# Available Variables: .DisplayName, .AppName and .Domain.
# GITEA__mailer__FROM_DISPLAY_NAME_FORMAT: "{{ .DisplayName }}"

# Prefix to be placed before e-mail subject lines.
# GITEA__mailer__SUBJECT_PREFIX:

# The location of sendmail on the operating system (can be command or full path).
# GITEA__mailer__SENDMAIL_PATH: sendmail

# Specify any extra sendmail arguments. (NOTE: you should be aware that email addresses can look like options - if yoursendmailcommand takes options you must set the option terminator--)
# GITEA__mailer__SENDMAIL_ARGS:

# default timeout for sending email through sendmail
# GITEA__mailer__SENDMAIL_TIMEOUT: 5m

# Most versions of sendmail prefer LF line endings rather than CRLF line endings. Set this to false if your version of sendmail requires CRLF line endings.
# GITEA__mailer__SENDMAIL_CONVERT_CRLF: true

# Send mails only in plain text, without HTML alternative.
# GITEA__mailer__SEND_AS_PLAIN_TEXT: false

# Embed attached images in base64 format in HTML emails. (for clients that do not load external images or disconnected vpn users still receiving emails; 
#ATTENTION: online webclients like gmail will not show base64 embedded images)
# GITEA__mailer__EMBED_ATTACHMENT_IMAGES: false

########################################
#        mailer.override_header        #
########################################

# WARNING:
# This is empty by default, use it only if you know what you need it for.

# examples would be:
# [mailer.override_header]
# Reply-To = test@example.com, test2@example.com
# Content-Type = text/html; charset=utf-8
# In-Reply-To =

########################################
#            email.incoming            #
########################################

# Enable handling of incoming emails.
# GITEA__email.incoming__ENABLED: false

# The email address including the %{token} placeholder that will be replaced per user/action. Example: incoming+%{token}@example.com. The placeholder must appear in the user part of the address (before the @).
# GITEA__email.incoming__REPLY_TO_ADDRESS:

# IMAP server host.
# GITEA__email.incoming__HOST:

# IMAP server port.
# GITEA__email.incoming__PORT:

# Username of the receiving account.
# GITEA__email.incoming__USERNAME:

# Password of the receiving account.
# GITEA__email.incoming__PASSWORD:

# Whether the IMAP server uses TLS.
# GITEA__email.incoming__USE_TLS: false

# If set to true , completely ignores server certificate validation errors. This option is unsafe.
# GITEA__email.incoming__SKIP_TLS_VERIFY: false

# The mailbox name where incoming mail will end up.
# GITEA__email.incoming__MAILBOX: INBOX

# Whether handled messages should be deleted from the mailbox.
# GITEA__email.incoming__DELETE_HANDLED_MESSAGE: true

# Maximum size of a message to handle. Bigger messages are ignored. Set to 0 to allow every size.
# GITEA__email.incoming__MAXIMUM_MESSAGE_SIZE: 10485760

########################################
#                cache                 #
########################################

# Cache engine adapter, either memory, redis, twoqueue or memcache. (twoqueue represents a size limited LRU cache.)
# GITEA__cache__ADAPTER: memory

# Garbage Collection interval (sec), for memory and twoqueue cache only.
# GITEA__cache__INTERVAL: 60

# Connection string for redis and memcache. For twoqueue sets configuration for the queue.
# - Redis: redis://:macaron@127.0.0.1:6379/0?pool_size=100&idle_timeout=180s (See https://docs.gitea.com/administration/config-cheat-sheet#queue-queue-and-queue for information on additional supported connection types)
#   - For a Redis cluster: redis+cluster://:macaron@127.0.0.1:6379/0?pool_size=100&idle_timeout=180s
#   - For a Redis sentinel: redis+sentinel://:macaron@sentinel0:26379,sentinel1:26379,sentinel2:26379/0?pool_size=100&idle_timeout=180s&master_name=mymaster
# - Memcache:127.0.0.1:9090;127.0.0.1:9091
# - TwoQueue LRU cache:{"size":50000,"recent_ratio":0.25,"ghost_ratio":0.5} or 50000 representing the maximum number of objects stored in the cache.
# GITEA__cache__HOST:

# Time to keep items in cache if not used, Setting it to -1 disables caching.
# GITEA__cache__ITEM_TTL: 16h

########################################
#          cache.last_commit           #
########################################

# Time to keep items in cache if not used, Setting it to -1 disables caching.
# GITEA__cache.last_commit__ITEM_TTL: 8760h

# Only enable the cache when repository's commits count great than.
# GITEA__cache.last_commit__COMMITS_COUNT: 1000

########################################
#               session                #
########################################

# Session engine provider [memory, file, redis, db, mysql, couchbase, memcache, postgres]. Settingdbwill reuse the configuration in [database]
# GITEA__session__PROVIDER: memory

# For file, the root path; for db, empty (database config will be used); for others, the connection string. Relative paths will be made absolute against AppWorkPath.
# GITEA__session__PROVIDER_CONFIG: data/sessions

# trueorfalse. Enable this to force using HTTPS for all session access. If not set, it defaults to true if the ROOT_URL is an HTTPS URL.
# GITEA__session__COOKIE_SECURE:

# The name of the cookie used for the session ID.
# GITEA__session__COOKIE_NAME: i_like_gitea

# GC interval in seconds.
# GITEA__session__GC_INTERVAL_TIME: 86400

# Session life time in seconds, default is 86400 (1 day)
# GITEA__session__SESSION_LIFE_TIME: 86400

# Sets the cookie Domain
# GITEA__session__DOMAIN:

# [strict, lax, none]: Set the SameSite setting for the cookie.
# GITEA__session__SAME_SITE: lax

########################################
#               picture                #
########################################

# Can be gravatar, duoshuo or anything like http://cn.gravatar.com/avatar/.
# GITEA__picture__GRAVATAR_SOURCE: gravatar

# Storage type defined in [storage.xxx]. Default is default which will read [storage] if no section [storage] will be a type local.
# GITEA__picture__AVATAR_STORAGE_TYPE: default

# Path to store user avatar image files.
# GITEA__picture__AVATAR_UPLOAD_PATH: data/avatars

# Maximum avatar image width in pixels.
# GITEA__picture__AVATAR_MAX_WIDTH: 4096

# Maximum avatar image height in pixels.
# GITEA__picture__AVATAR_MAX_HEIGHT: 4096

# (1MiB): Maximum avatar image file size in bytes.
# GITEA__picture__AVATAR_MAX_FILE_SIZE: 1048576

# (256KiB): If the uploaded file is not larger than this byte size, the image will be used as is, without resizing/converting.
# GITEA__picture__AVATAR_MAX_ORIGIN_SIZE: 262144

# The multiplication factor for rendered avatar images. Larger values result in finer rendering on HiDPI devices.
# GITEA__picture__AVATAR_RENDERED_SIZE_FACTOR: 2

# Storage type defined in [storage.xxx] . Default is default which will read [storage] if no section [storage] will be a type local.
# GITEA__picture__REPOSITORY_AVATAR_STORAGE_TYPE: default

# Path to store repository avatar image files.
# GITEA__picture__REPOSITORY_AVATAR_UPLOAD_PATH: data/repo-avatars

# How Gitea deals with missing repository avatars
# - none = no avatar will be displayed
# - random = random avatar will be generated
# - image = default image will be used (which is set in REPOSITORY_AVATAR_FALLBACK_IMAGE)
# GITEA__picture__REPOSITORY_AVATAR_FALLBACK: none

# Image used as default repository avatar (ifREPOSITORY_AVATAR_FALLBACKis set to image and none was uploaded)
# GITEA__picture__REPOSITORY_AVATAR_FALLBACK_IMAGE: /img/repo_default.png

########################################
#               project                #
########################################

# Default templates for project board view:

# GITEA__project__PROJECT_BOARD_BASIC_KANBAN_TYPE: To Do, In Progress, Done

# GITEA__project__PROJECT_BOARD_BUG_TRIAGE_TYPE: Needs Triage, High Priority, Low Priority, Closed

########################################
#              attachment              #
########################################

# Whether issue and pull request attachments are enabled.
# GITEA__attachment__ENABLED: true

# Comma-separated list of allowed file extensions (.zip), mime types (text/plain) or wildcard type (image/*, audio/*, video/*). Empty value or */* allows all types.
# GITEA__attachment__ALLOWED_TYPES: .avif,.cpuprofile,.csv,.dmp,.docx,.fodg,.fodp,.fods,.fodt,.gif,.gz,.jpeg,.jpg,.json,.jsonc,.log,.md,.mov,.mp4,.odf,.odg,.odp,.ods,.odt,.patch,.pdf,.png,.pptx,.svg,.tgz,.txt,.webm,.webp,.xls,.xlsx,.zip

# Maximum size (MB).
# GITEA__attachment__MAX_SIZE: 2048

# Maximum number of attachments that can be uploaded at once.
# GITEA__attachment__MAX_FILES: 5

# Storage type for attachments, it could be <blank>, local, minio, azureblob or xxx which is defined in another section with [storage.xxx].
# For STORAGE_TYPE = or if the configuration item doesn't exist, all storages will be derived from [storage] if configured or default values.
# For STORAGE_TYPE = local, below are possible configurations
# - PATH: attachments: Path to store attachments only available when STORAGE_TYPE is local, relative paths will be resolved to {AppDataPath}/{attachment.PATH}.
# For STORAGE_TYPE = minio, the configurations can be found at https://docs.gitea.com/administration/config-cheat-sheet#storage_minio, you can override some configurations like below.
# - MINIO_BASE_PATH: attachments/: Minio base path on the bucket only available when STORAGE_TYPE is minio 
# For STORAGE_TYPE = xxx, the configuration will be derived from [storage.xxx] and some configurations can be overrided like below.
# - PATH: the same as above
# - MINIO_BASE_PATH: the same as above
# GITEA__attachment__STORAGE_TYPE: local


########################################
#                 log                  #
########################################

# full documentation: https://docs.gitea.com/administration/config-cheat-sheet#log-log
# TODO: move all log sections into this file

# Root path for log files.
# GITEA__log__ROOT_PATH:

# Logging mode. For multiple modes, use a comma to separate values. You can configure each mode in per mode log subsections \[log.writer-mode-name\].
# GITEA__log__MODE: console

# General log level. [Trace, Debug, Info, Warn, Error, Critical, Fatal, None]
# GITEA__log__LEVEL: Info

# Default log level at which to log create stack traces (rarely useful, do not set it). [Trace, Debug, Info, Warn, Error, Critical, Fatal, None]
# GITEA__log__STACKTRACE_LEVEL: None

# save ssh log to log file
# GITEA__log__ENABLE_SSH_LOG: false

# The "access" logger
# GITEA__log__logger.access.MODE:

# The "router" logger, a single comma means it will use the default MODE above
# GITEA__log__logger.router.MODE: ,

# The "xorm" logger
# GITEA__log__logger.xorm.MODE: ,

########################################
#                 cron                 #
########################################

# full documentaion: https://docs.gitea.com/administration/config-cheat-sheet#cron-cron
# TODO: move all cron sections into this file

# Enable to run all cron tasks periodically with default settings.
# GITEA__cron__ENABLED: false

# Run cron tasks at application start-up.
# GITEA__cron__RUN_AT_START: false

# Set to true to switch on success notices.
# GITEA__cron__NOTICE_ON_SUCCESS: false

# accept formats
# - Full crontab specs, e.g.* * * * * ?
# - Descriptors, e.g. @midnight, @every 1h30m...
# - See more: https://pkg.go.dev/github.com/gogs/cron@v0.0.0-20171120032916-9f6c956d3e14
# GITEA__cron__SCHEDULE: 

########################################
#                 git                  #
########################################

# full documentation: https://docs.gitea.com/administration/config-cheat-sheet#git-git
# TODO: move all git sections into this file

# The path of Git executable. If empty, Gitea searches through the PATH environment.
# GITEA__git__PATH: ""

# The HOME directory for Git.
# This directory will be used to contain the .gitconfig and possible .gnupg directories that Gitea's git calls will use. If you can confirm Gitea is the only application running in this environment, you can set it to the normal home directory for Gitea user.
# GITEA__git__HOME_PATH: {APP_DATA_PATH}/home

# Disables highlight of added and removed changes.
# GITEA__git__DISABLE_DIFF_HIGHLIGHT: false

# Max number of lines allowed of a single file in diff view.
# GITEA__git__MAX_GIT_DIFF_LINES: 1000

# Max character count per line highlighted in diff view.
# GITEA__git__MAX_GIT_DIFF_LINE_CHARACTERS: 5000

# Max number of files shown in diff view.
# GITEA__git__MAX_GIT_DIFF_FILES: 100

# Set the default commits range size
# GITEA__git__COMMITS_RANGE_SIZE: 50

# Set the default branches range size
# GITEA__git__BRANCHES_RANGE_SIZE: 20

# Arguments for commandgit gc, e.g. --aggressive --auto. See more on http://git-scm.com/docs/git-gc/
# GITEA__git__GC_ARGS:

# If use Git wire protocol version 2 when Git version >= 2.18, default is true, set to false when you always want Git wire protocol version 1.
# To enable this for Git over SSH when using a OpenSSH server, add AcceptEnv GIT_PROTOCOL to your sshd_config file.
# GITEA__git__ENABLE_AUTO_GIT_WIRE_PROTOCOL: true

# Respond to pushes to a non-default branch with a URL for creating a Pull Request (if the repository has them enabled)
# GITEA__git__PULL_REQUEST_PUSH_MESSAGE: true

# Print status information about pushes as they are being processed.
# GITEA__git__VERBOSE_PUSH: true

# Only print verbose information if push takes longer than this delay.
# GITEA__git__VERBOSE_PUSH_DELAY: 5s

# (Go-Git only), don't cache objects greater than this in memory. (Set to 0 to disable.)
# GITEA__git__LARGE_OBJECT_THRESHOLD: 1048576

# Set to true to forcibly set core.protectNTFS to false.
# GITEA__git__DISABLE_CORE_PROTECT_NTFS: false

# Disable the usage of using partial clones for git.
# GITEA__git__DISABLE_PARTIAL_CLONE: false

########################################
#               metrics                #
########################################

# Enables /metrics endpoint for prometheus.
# GITEA__metrics__ENABLED: false

# Enable issue by label metrics with format gitea_issues_by_label{label="bug"} 2.
# GITEA__metrics__ENABLED_ISSUE_BY_LABEL: false

# Enable issue by repository metrics with format gitea_issues_by_repository{repository="org/repo"} 5.
# GITEA__metrics__ENABLED_ISSUE_BY_REPOSITORY: false

# You need to specify the token, if you want to include in the authorization the metrics. The same token need to be used in prometheus parameters bearer_token or bearer_token_file.
# GITEA__metrics__TOKEN:

########################################
#                 api                  #
########################################

# Enables the API documentation endpoints (/api/swagger, /api/v1/swagger, …). True or false.
# GITEA__api__ENABLE_SWAGGER: true

# Max number of items in a page.
# GITEA__api__MAX_RESPONSE_ITEMS: 50

# Default paging number of API.
# GITEA__api__DEFAULT_PAGING_NUM: 30

# Default and maximum number of items per page for Git trees API.
# GITEA__api__DEFAULT_GIT_TREES_PER_PAGE: 1000

# (10MiB): Default max size of a blob that can be returned by the blobs API.
# GITEA__api__DEFAULT_MAX_BLOB_SIZE: 10485760

########################################
#                oauth2                #
########################################

# Enables OAuth2 provider.
# GITEA__oauth2__ENABLED: true

# Lifetime of an OAuth2 access token in seconds
# GITEA__oauth2__ACCESS_TOKEN_EXPIRATION_TIME: 3600

# Lifetime of an OAuth2 refresh token in hours
# GITEA__oauth2__REFRESH_TOKEN_EXPIRATION_TIME: 730

# Check if refresh token has already been used
# GITEA__oauth2__INVALIDATE_REFRESH_TOKENS: false

# Algorithm used to sign OAuth2 tokens. Valid values: [HS256,HS384,HS512,RS256,RS384,RS512,ES256,ES384,ES512]
# GITEA__oauth2__JWT_SIGNING_ALGORITHM: RS256

# OAuth2 authentication secret for access and refresh tokens, change this to a unique string. This setting is only needed if JWT_SIGNING_ALGORITHM is set to HS256, HS384 or HS512.
# GITEA__oauth2__JWT_SECRET:

# Instead of defining JWT_SECRET in the configuration, this configuration option can be used to give Gitea a path to a file that contains the secret (example value: file:/etc/gitea/oauth2_jwt_secret)
# GITEA__oauth2__JWT_SECRET_URI:

# Private key file path used to sign OAuth2 tokens. The path is relative toAPP_DATA_PATH. This setting is only needed if JWT_SIGNING_ALGORITHM is set to RS256, RS384, RS512, ES256, ES384 or ES512. 
# The file must contain a RSA or ECDSA private key in the PKCS8 format. If no key exists a 4096 bit key will be created for you.
# GITEA__oauth2__JWT_SIGNING_PRIVATE_KEY_FILE: jwt/private.pem

# Maximum length of token/cookie to accept from OAuth2 provider
# GITEA__oauth2__MAX_TOKEN_LENGTH: 32767

# Pre-register OAuth applications for some services on startup. See https://docs.gitea.com/development/oauth2-provider for the list of available options.
# GITEA__oauth2__DEFAULT_APPLICATIONS: git-credential-oauth, git-credential-manager, tea

########################################
#                 i18n                 #
########################################

# List of locales shown in language selector. The first locale will be used as the default if user browser's language doesn't match any locale in the list.
# GITEA__i18n__LANGS: de-DE,en-US,zh-CN,zh-HK,zh-TW,fr-FR,nl-NL,lv-LV,ru-RU,uk-UA,ja-JP,es-ES,pt-BR,pt-PT,pl-PL,bg-BG,it-IT,fi-FI,tr-TR,cs-CZ,sv-SE,ko-KR,el-GR,fa-IR,hu-HU,id-ID,ml-IN

# Visible names corresponding to the locales
# GITEA__i18n__NAMES: Deutsch,English,简体中文,繁體中文（香港）,繁體中文（台灣）,Français,Nederlands,Latviešu,Русский,Українська,日本語,Español,Português do Brasil,Português de Portugal,Polski,Български,Italiano,Suomi,Türkçe,Čeština,Српски,Svenska,한국어,Ελληνικά,فارسی,Magyar nyelv,Bahasa Indonesia,മലയാളം

########################################
#                markup                #
########################################

# Full documentation: https://docs.gitea.com/administration/config-cheat-sheet#markup-markup

# Set the maximum size of a Mermaid source. (Set to -1 to disable)
# GITEA__markup__MERMAID_MAX_SOURCE_CHARACTERS: 50000

# Gitea can support Markup using external tools. The example below will add a markup named asciidoc.

# [markup.asciidoc]
# ENABLED = true
# NEED_POSTPROCESS = true
# FILE_EXTENSIONS = .adoc,.asciidoc
# RENDER_COMMAND = "asciidoctor --embedded --safe-mode=secure --out-file=- -"
# IS_INPUT_FILE = false

########################################
#          markup.[renderer]           #
########################################

# Enable markup support; set to true to enable renderer [renderer].
# GITEA__markup.[renderer]__ENABLED: false

# set to true to replace links / sha1 and etc.
# GITEA__markup.[renderer]__NEED_POSTPROCESS: true

# List of file extensions that should be rendered by an external command. Multiple extensions needs a comma as splitter.
# GITEA__markup.[renderer]__FILE_EXTENSIONS:

# External command to render all matching extensions.
# GITEA__markup.[renderer]__RENDER_COMMAND:

# Input is not a standard input but a file param followed RENDER_COMMAND.
# GITEA__markup.[renderer]__IS_INPUT_FILE: false

# How the content will be rendered.
# - sanitized: Sanitize the content and render it inside current page, default to only allow a few HTML tags and attributes. Customized sanitizer rules can be defined in [markup.sanitizer.*].
# - no-sanitizer: Disable the sanitizer and render the content inside current page. It's insecure and may lead to XSS attack if the content contains malicious code.
# - iframe: Render the content in a separate standalone page and embed it into current page by iframe. The iframe is in sandbox mode with same-origin disabled, and the JS code are safely isolated from parent page.
# GITEA__markup.[renderer]__RENDER_CONTENT_MODE: sanitized

########################################
#          highlight.mapping           #
########################################

# docs: https://docs.gitea.com/administration/config-cheat-sheet#highlight-mappings-highlightmapping

########################################
#                 time                 #
########################################

# Default location of time on the UI, so that we can display correct user's time on UI. i.e. Asia/Shanghai
# GITEA__time__DEFAULT_UI_LOCATION: 

########################################
#              migrations              #
########################################

# Max attempts per http/https request on migrations.
# GITEA__migrations__MAX_ATTEMPTS: 3

# Backoff time per http/https request retry (seconds)
# GITEA__migrations__RETRY_BACKOFF: 3

# Domains allowlist for migrating repositories, default is blank. It means external hosts will be allowed. Multiple domains could be separated by commas. Wildcard is supported: github.com, *.github.com.
# GITEA__migrations__ALLOWED_DOMAINS:

# Domains blocklist for migrating repositories, default is blank. Multiple domains could be separated by commas. When ALLOWED_DOMAINS is not blank, this option has a higher priority to deny domains. Wildcard is supported.
# GITEA__migrations__BLOCKED_DOMAINS:

# Allow private addresses defined by RFC 1918, RFC 1122, RFC 4632 and RFC 4291. If a domain is allowed by ALLOWED_DOMAINS, this option will be ignored.
# GITEA__migrations__ALLOW_LOCALNETWORKS: false

# Allow skip tls verify
# GITEA__migrations__SKIP_TLS_VERIFY: false

########################################
#              federation              #
########################################

# Enable/Disable federation capabilities
# GITEA__federation__ENABLED: false

# Enable/Disable user statistics for nodeinfo if federation is enabled
# GITEA__federation__SHARE_USER_STATISTICS: true

# Maximum federation request and response size (MB)
# GITEA__federation__MAX_SIZE: 4

# WARNING
# Changing the settings below can break federation.

# HTTP signature algorithms
# GITEA__federation__ALGORITHMS: "rsa-sha256, rsa-sha512, ed25519"

# HTTP signature digest algorithm
# GITEA__federation__DIGEST_ALGORITHM: "SHA-256"

# GET headers for federation requests
# GITEA__federation__GET_HEADERS: "(request-target), Date"

# POST headers for federation requests
# GITEA__federation__POST_HEADERS: "(request-target), Date, Digest"

########################################
#               packages               #
########################################

# Enable/Disable package registry capabilities
# GITEA__packages__ENABLED: true

# Path for chunked uploads. Defaults toAPP_DATA_PATH+tmp/package-upload
# GITEA__packages__CHUNKED_UPLOAD_PATH: "tmp/package-upload"

# Maximum count of package versions a single owner can have (-1 means no limits)
# GITEA__packages__LIMIT_TOTAL_OWNER_COUNT: -1

# Maximum size of packages a single owner can use (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_TOTAL_OWNER_SIZE: -1

# Maximum size of an Alpine upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_ALPINE: -1

# Maximum size of a Cargo upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_CARGO: -1

# Maximum size of a Chef upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_CHEF: -1

# Maximum size of a Composer upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_COMPOSER: -1

# Maximum size of a Conan upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_CONAN: -1

# Maximum size of a Conda upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_CONDA: -1

# Maximum size of a Container upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_CONTAINER: -1

# Maximum size of a CRAN upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_CRAN: -1

# Maximum size of a Debian upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_DEBIAN: -1

# Maximum size of a Generic upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_GENERIC: -1

# Maximum size of a Go upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_GO: -1

# Maximum size of a Helm upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_HELM: -1

# Maximum size of a Maven upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_MAVEN: -1

# Maximum size of a npm upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_NPM: -1

# Maximum size of a NuGet upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_NUGET: -1

# Maximum size of a Pub upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_PUB: -1

# Maximum size of a PyPI upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_PYPI: -1

# Maximum size of a RPM upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_RPM: -1

# Maximum size of a RubyGems upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_RUBYGEMS: -1

# Maximum size of a Swift upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_SWIFT: -1

# Maximum size of a Vagrant upload (-1 means no limits, format 1000, 1 MB, 1 GiB)
# GITEA__packages__LIMIT_SIZE_VAGRANT: -1

########################################
#                mirror                #
########################################

# Enables the mirror functionality. Set to false to disable all mirrors. Pre-existing mirrors remain valid but won't be updated; may be converted to regular repo.
# GITEA__mirror__ENABLED: true

# Disable the creation of new pull mirrors. Pre-existing mirrors remain valid. Will be ignored ifmirror. ENABLED is false.
# GITEA__mirror__DISABLE_NEW_PULL: false

# Disable the creation of new push mirrors. Pre-existing mirrors remain valid. Will be ignored ifmirror. ENABLED is false.
# GITEA__mirror__DISABLE_NEW_PUSH: false

# Default interval between each check
# GITEA__mirror__DEFAULT_INTERVAL: 8h

# Minimum interval for checking. (Must be >1m).
# GITEA__mirror__MIN_INTERVAL: 10m

########################################
#                 lfs                  #
########################################

# full documentation: https://docs.gitea.com/administration/config-cheat-sheet#lfs-lfs
# Storage configuration for lfs data. It will be derived from default [storage] or [storage.xxx] when set STORAGE_TYPE to xxx. When derived, the default of PATH is data/lfs and the default of MINIO_BASE_PATH is lfs/.

# Storage type for lfs, it could be <blank>, local, minio, azureblob or xxx which defined in another section with [storage.xxx]. 
# For STORAGE_TYPE = or there is no this configuration item, all storages will be derived from [storage] if configured or default values.
# For STORAGE_TYPE = local, below are possible configurations
# GITEA__lfs__STORAGE_TYPE: local

# Where to store LFS files, only available when STORAGE_TYPE is local. 
# If not set it fall back to deprecated LFS_CONTENT_PATH value in [server] section.
# For STORAGE_TYPE = minio, the configurations can be found at https://docs.gitea.com/administration/config-cheat-sheet#storage_minio, you can also define configurations like below to override derived or default values.
# - MINIO_BASE_PATH: attachments/: Minio base path on the bucket only available when STORAGE_TYPE is minio 
# For STORAGE_TYPE = xxx, the configuration will be derived from [storage.xxx] and some configurations can be overrided list below.
# GITEA__lfs__PATH: ./data/lfs

# the same as above
# GITEA__lfs__PATH: 

# the same as above
# GITEA__lfs__MINIO_BASE_PATH: 

########################################
#              lfs_client              #
########################################

# The number of LFS pointers to request per batch API request of an upstream mirror.
# GITEA__lfs_client__BATCH_SIZE: 20

# The number of concurrent upload/download operations within a batch.
# GITEA__lfs_client__BATCH_OPERATION_CONCURRENCY: 8

########################################
#               storage                #
########################################

# TODO: include full storage config
# Full documentation: https://docs.gitea.com/administration/config-cheat-sheet#storage-storage

# Default storage configuration for attachments, lfs, avatars, repo-avatars, repo-archive, packages, actions_log, actions_artifact. 
# It's recommended to only configure this section and let other section derive from this one if all storages are under the same parent directory or minio bucket.

# Storage type, local for local disk, minio for s3 compatible object storage service, azureblob for azure blob storage service.
# GITEA__storage__STORAGE_TYPE: local

########################################
#         storage.repo-archive         #
########################################

# Configuration for repository archive storage. It will inherit from default [storage] or [storage.xxx] when set STORAGE_TYPE to xxx. The default of PATH is data/repo-archive and the default of MINIO_BASE_PATH is repo-archive/.

# Storage type for repo archive, it could be<blank>,local,minio,azurebloborxxxwhich defined in another section with[storage.xxx].ForSTORAGE_TYPE =or there is no this configuration item, all storages will be derived from[storage]if configured or defult values.ForSTORAGE_TYPE = local, below are possible configurationsPATH:./data/repo-archive: Where to store archive files, only available whenSTORAGE_TYPEislocal.ForSTORAGE_TYPE = minio, the configurations can be found atStorage Minio, you can override some configurations like below.MINIO_BASE_PATH:repo-archive/: Minio base path on the bucket only available whenSTORAGE_TYPEisminioForSTORAGE_TYPE = xxx, the configuration will be derived from[storage.xxx]and some configurations can be overrided list below.PATH: the same as aboveMINIO_BASE_PATH: the same as above
# GITEA__storage.repo-archive__STORAGE_TYPE: local

# Where to store archive files, only available whenSTORAGE_TYPEislocal.
# GITEA__storage.repo-archive__PATH: "./data/repo-archive"

# Minio base path on the bucket only available whenSTORAGE_TYPEisminio
# GITEA__storage.repo-archive__MINIO_BASE_PATH: "repo-archive/"

# the same as above
# GITEA__storage.repo-archive__PATH: 

# the same as above
# GITEA__storage.repo-archive__MINIO_BASE_PATH: 

########################################
#             repo-archive             #
########################################

# Storage type for actions logs,localfor local disk orminiofor s3 compatible object storage service, default islocalor other name defined with[storage.xxx]
# GITEA__repo-archive__STORAGE_TYPE: local

# Minio base path on the bucket only available when STORAGE_TYPE isminio
# GITEA__repo-archive__MINIO_BASE_PATH: "repo-archive/"

########################################
#                proxy                 #
########################################

# Enable the proxy if true, all requests to external via HTTP will be affected, if false, no proxy will be used even environment http_proxy/https_proxy
# GITEA__proxy__PROXY_ENABLED: false

# Proxy server URL, support http://, https//, socks://, blank will follow environment http_proxy/https_proxy
# GITEA__proxy__PROXY_URL:

# Comma separated list of host names requiring proxy. Glob patterns (*) are accepted; use ** to match all hosts.
# GITEA__proxy__PROXY_HOSTS:

########################################
#               actions                #
########################################

# Enable/Disable actions capabilities
# GITEA__actions__ENABLED: true

# Default platform to get action plugins, github for https://github.com, self for the current Gitea instance.
# GITEA__actions__DEFAULT_ACTIONS_URL: github

# Storage type for actions logs, local for local disk or minio for s3 compatible object storage service, default is local or other name defined with [storage.xxx]
# GITEA__actions__STORAGE_TYPE: local

# Minio base path on the bucket only available when STORAGE_TYPE is minio
# GITEA__actions__MINIO_BASE_PATH: actions_log/

# Logs retention time in days. Old logs will be deleted after this period.
# GITEA__actions__LOG_RETENTION_DAYS: 365

# Log compression type, none for no compression, zstd for zstd compression.
# Other compression types like gzip are NOT supported, since seekable stream is required for log view.
# It's always recommended to use compression when using local disk as log storage if CPU or memory is not a bottleneck.
# And for object storage services like S3, which is billed for requests, it would cause extra 2 times of get requests for each log view.
# But it will save storage space and network bandwidth, so it's still recommended to use compression.
# GITEA__actions__LOG_COMPRESSION: zstd

# Default number of days to keep artifacts. Artifacts could have their own retention periods by setting the retention-days option in actions/upload-artifact step.
# GITEA__actions__ARTIFACT_RETENTION_DAYS: 90

# Timeout to stop the task which have running status, but haven't been updated for a long time
# GITEA__actions__ZOMBIE_TASK_TIMEOUT: 10m

# Timeout to stop the tasks which have running status and continuous updates, but don't end for a long time
# GITEA__actions__ENDLESS_TASK_TIMEOUT: 3h

# Timeout to cancel the jobs which have waiting status, but haven't been picked by a runner for a long time
# GITEA__actions__ABANDONED_JOB_TIMEOUT: 24h

# Strings committers can place inside a commit message or PR title to skip executing the corresponding actions workflow
# GITEA__actions__SKIP_WORKFLOW_STRINGS: [skip ci],[ci skip],[no ci],[skip actions],[actions skip]

########################################
#                other                 #
########################################

# Show Gitea and Go version information in the footer.
# GITEA__other__SHOW_FOOTER_VERSION: true

# Show time of template execution in the footer.
# GITEA__other__SHOW_FOOTER_TEMPLATE_LOAD_TIME: true

# Show the "powered by" text in the footer.
# GITEA__other__SHOW_FOOTER_POWERED_BY: true

# Generate sitemap.
# GITEA__other__ENABLE_SITEMAP: true

# Enable/Disable RSS/Atom feed.
# GITEA__other__ENABLE_FEED: true
